{"version":3,"file":"SinglePastCommitInfo.js","sourceRoot":"./@jupyterlab/git/src/","sources":["components/SinglePastCommitInfo.tsx"],"names":[],"mappings":"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","sourcesContent":["import { fileIcon } from '@jupyterlab/ui-components';\nimport { CommandRegistry } from '@lumino/commands';\nimport * as React from 'react';\nimport { FixedSizeList, ListChildComponentProps } from 'react-window';\nimport { classes } from 'typestyle';\nimport { CommandIDs } from '../commandsAndMenu';\nimport { LoggerContext } from '../logger';\nimport { GitExtension } from '../model';\nimport {\n  deletionsMadeIcon,\n  diffIcon,\n  discardIcon,\n  insertionsMadeIcon,\n  rewindIcon\n} from '../style/icons';\nimport {\n  actionButtonClass,\n  commitClass,\n  commitDetailClass,\n  commitDetailFileClass,\n  commitDetailHeaderClass,\n  commitOverviewNumbersClass,\n  deletionsIconClass,\n  fileListClass,\n  iconClass,\n  insertionsIconClass\n} from '../style/SinglePastCommitInfo';\nimport { Git } from '../tokens';\nimport { ActionButton } from './ActionButton';\nimport { isDiffSupported } from './diff/Diff';\nimport { FilePath } from './FilePath';\nimport { ResetRevertDialog } from './ResetRevertDialog';\n\nconst ITEM_HEIGHT = 24; // File list item height\nconst MAX_VISIBLE_FILES = 20; // Maximal number of file display at once\n\n/**\n * Interface describing component properties.\n */\nexport interface ISinglePastCommitInfoProps {\n  /**\n   * Commit data.\n   */\n  commit: Git.ISingleCommitInfo;\n\n  /**\n   * Extension data model.\n   */\n  model: GitExtension;\n\n  /**\n   * Jupyter App commands registry\n   */\n  commands: CommandRegistry;\n}\n\n/**\n * Interface describing component state.\n */\nexport interface ISinglePastCommitInfoState {\n  /**\n   * Commit information.\n   */\n  info: string;\n\n  /**\n   * Number of modified files.\n   */\n  numFiles: string;\n\n  /**\n   * Number of insertions.\n   */\n  insertions: string;\n\n  /**\n   * Number of deletions.\n   */\n  deletions: string;\n\n  /**\n   * A list of modified files.\n   */\n  modifiedFiles: Git.ICommitModifiedFile[];\n\n  /**\n   * Current loading state for loading individual commit information.\n   */\n  loadingState: 'loading' | 'error' | 'success';\n\n  /**\n   * Boolean indicating whether to display a dialog for reseting or reverting a commit.\n   */\n  resetRevertDialog: boolean;\n\n  /**\n   * Reset/revert dialog mode (i.e., whether the dialog should be for reseting to or reverting an individual commit).\n   */\n  resetRevertAction: 'reset' | 'revert';\n}\n\n/**\n * React component for rendering information about an individual commit.\n */\nexport class SinglePastCommitInfo extends React.Component<\n  ISinglePastCommitInfoProps,\n  ISinglePastCommitInfoState\n> {\n  /**\n   * Returns a React component for information about an individual commit.\n   *\n   * @param props - component properties\n   * @returns React component\n   */\n  constructor(props: ISinglePastCommitInfoProps) {\n    super(props);\n    this.state = {\n      info: '',\n      numFiles: '',\n      insertions: '',\n      deletions: '',\n      modifiedFiles: [],\n      loadingState: 'loading',\n      resetRevertDialog: false,\n      resetRevertAction: 'reset'\n    };\n  }\n\n  /**\n   * Callback invoked immediately after mounting a component (i.e., inserting into a tree).\n   */\n  async componentDidMount(): Promise<void> {\n    try {\n      const log = await this.props.model.detailedLog(this.props.commit.commit);\n\n      this.setState({\n        info: log.modified_file_note,\n        numFiles: log.modified_files_count,\n        insertions: log.number_of_insertions,\n        deletions: log.number_of_deletions,\n        modifiedFiles: log.modified_files,\n        loadingState: 'success'\n      });\n    } catch (err) {\n      console.error(\n        `Error while getting detailed log for commit ${this.props.commit.commit} and path ${this.props.model.pathRepository}`,\n        err\n      );\n      this.setState({ loadingState: 'error' });\n      return;\n    }\n  }\n\n  /**\n   * Renders the component.\n   *\n   * @returns React element\n   */\n  render(): React.ReactElement {\n    if (this.state.loadingState === 'loading') {\n      return <div>...</div>;\n    }\n    if (this.state.loadingState === 'error') {\n      return <div>Error loading commit data</div>;\n    }\n    return (\n      <div>\n        <div className={commitClass}>\n          <div className={commitOverviewNumbersClass}>\n            <span title=\"# Files Changed\">\n              <fileIcon.react className={iconClass} tag=\"span\" />\n              {this.state.numFiles}\n            </span>\n            <span title=\"# Insertions\">\n              <insertionsMadeIcon.react\n                className={classes(iconClass, insertionsIconClass)}\n                tag=\"span\"\n              />\n              {this.state.insertions}\n            </span>\n            <span title=\"# Deletions\">\n              <deletionsMadeIcon.react\n                className={classes(iconClass, deletionsIconClass)}\n                tag=\"span\"\n              />\n              {this.state.deletions}\n            </span>\n          </div>\n        </div>\n        <div className={commitDetailClass}>\n          <div className={commitDetailHeaderClass}>\n            Changed\n            <ActionButton\n              className={actionButtonClass}\n              icon={discardIcon}\n              title=\"Revert changes introduced by this commit\"\n              onClick={this._onRevertClick}\n            />\n            <ActionButton\n              className={actionButtonClass}\n              icon={rewindIcon}\n              title=\"Discard changes introduced *after* this commit (hard reset)\"\n              onClick={this._onResetClick}\n            />\n            <LoggerContext.Consumer>\n              {logger => (\n                <ResetRevertDialog\n                  open={this.state.resetRevertDialog}\n                  action={this.state.resetRevertAction}\n                  model={this.props.model}\n                  logger={logger}\n                  commit={this.props.commit}\n                  onClose={this._onResetRevertDialogClose}\n                />\n              )}\n            </LoggerContext.Consumer>\n          </div>\n          {this.state.modifiedFiles.length > 0 && (\n            <FixedSizeList\n              className={fileListClass}\n              height={\n                Math.min(MAX_VISIBLE_FILES, this.state.modifiedFiles.length) *\n                ITEM_HEIGHT\n              }\n              innerElementType=\"ul\"\n              itemCount={this.state.modifiedFiles.length}\n              itemData={this.state.modifiedFiles}\n              itemKey={(index, data) => data[index].modified_file_path}\n              itemSize={ITEM_HEIGHT}\n              style={{ overflowX: 'hidden' }}\n              width={'auto'}\n            >\n              {this._renderFile}\n            </FixedSizeList>\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  /**\n   * Renders a modified file.\n   *\n   * @param props Row properties\n   * @returns React element\n   */\n  private _renderFile = (props: ListChildComponentProps): JSX.Element => {\n    const { data, index, style } = props;\n    const file = data[index];\n    const path = file.modified_file_path;\n    const flg = isDiffSupported(path) || !file.is_binary;\n    return (\n      <li\n        className={commitDetailFileClass}\n        onClick={this._onDiffClickFactory(path, flg)}\n        style={style}\n        title={path}\n      >\n        <FilePath filepath={path} filetype={file.type} />\n        {flg ? (\n          <ActionButton icon={diffIcon} title=\"View file changes\" />\n        ) : null}\n      </li>\n    );\n  };\n\n  /**\n   * Callback invoked upon a clicking a button to revert changes.\n   *\n   * @param event - event object\n   */\n  private _onRevertClick = (event: any): void => {\n    event.stopPropagation();\n    this.setState({\n      resetRevertDialog: true,\n      resetRevertAction: 'revert'\n    });\n  };\n\n  /**\n   * Callback invoked upon a clicking a button to reset changes.\n   *\n   * @param event - event object\n   */\n  private _onResetClick = (event: any): void => {\n    event.stopPropagation();\n    this.setState({\n      resetRevertDialog: true,\n      resetRevertAction: 'reset'\n    });\n  };\n\n  /**\n   * Callback invoked upon closing a dialog to reset or revert changes.\n   */\n  private _onResetRevertDialogClose = (): void => {\n    this.setState({\n      resetRevertDialog: false\n    });\n  };\n\n  /**\n   * Returns a callback to be invoked clicking a button to display a file diff.\n   *\n   * @param fpath - modified file path\n   * @param bool - boolean indicating whether a displaying a diff is supported for this file path\n   * @returns callback\n   */\n  private _onDiffClickFactory(fpath: string, bool: boolean) {\n    const self = this;\n    if (bool) {\n      return onShowDiff;\n    }\n    return onClick;\n\n    /**\n     * Callback invoked upon clicking a button to display a file diff.\n     *\n     * @private\n     * @param event - event object\n     */\n    function onClick(event: React.MouseEvent<HTMLLIElement, MouseEvent>) {\n      // Prevent the commit component from being collapsed:\n      event.stopPropagation();\n    }\n\n    /**\n     * Callback invoked upon clicking a button to display a file diff.\n     *\n     * @private\n     * @param event - event object\n     */\n    async function onShowDiff(\n      event: React.MouseEvent<HTMLLIElement, MouseEvent>\n    ) {\n      // Prevent the commit component from being collapsed:\n      event.stopPropagation();\n\n      try {\n        self.props.commands.execute(CommandIDs.gitFileDiff, {\n          filePath: fpath,\n          isText: bool,\n          context: {\n            previousRef: {\n              gitRef: self.props.commit.pre_commit\n            },\n            currentRef: {\n              gitRef: self.props.commit.commit\n            }\n          }\n        });\n      } catch (err) {\n        console.error(`Failed to open diff view for ${fpath}.\\n${err}`);\n      }\n    }\n  }\n}\n"]}