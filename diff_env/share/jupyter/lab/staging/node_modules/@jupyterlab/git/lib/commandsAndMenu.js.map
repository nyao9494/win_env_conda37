{"version":3,"file":"commandsAndMenu.js","sourceRoot":"./@jupyterlab/git/src/","sources":["commandsAndMenu.tsx"],"names":[],"mappings":"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","sourcesContent":["import { JupyterFrontEnd } from '@jupyterlab/application';\nimport {\n  Dialog,\n  InputDialog,\n  MainAreaWidget,\n  ReactWidget,\n  showDialog,\n  showErrorMessage\n} from '@jupyterlab/apputils';\nimport { PathExt } from '@jupyterlab/coreutils';\nimport { FileBrowser } from '@jupyterlab/filebrowser';\nimport { IRenderMimeRegistry } from '@jupyterlab/rendermime';\nimport { ISettingRegistry } from '@jupyterlab/settingregistry';\nimport { ITerminal } from '@jupyterlab/terminal';\nimport { CommandRegistry } from '@lumino/commands';\nimport { Menu } from '@lumino/widgets';\nimport * as React from 'react';\nimport {\n  Diff,\n  isDiffSupported,\n  RenderMimeProvider\n} from './components/diff/Diff';\nimport { getRefValue, IDiffContext } from './components/diff/model';\nimport { AUTH_ERROR_MESSAGES } from './git';\nimport { logger } from './logger';\nimport { GitExtension } from './model';\nimport { diffIcon } from './style/icons';\nimport { Git, Level } from './tokens';\nimport { GitCredentialsForm } from './widgets/CredentialsBox';\nimport { GitCloneForm } from './widgets/GitCloneForm';\n\nconst RESOURCES = [\n  {\n    text: 'Set Up Remotes',\n    url: 'https://www.atlassian.com/git/tutorials/setting-up-a-repository'\n  },\n  {\n    text: 'Git Documentation',\n    url: 'https://git-scm.com/doc'\n  }\n];\n\ninterface IGitCloneArgs {\n  /**\n   * Path in which to clone the Git repository\n   */\n  path: string;\n  /**\n   * Git repository url\n   */\n  url: string;\n}\n\n/**\n * Git operations requiring authentication\n */\nenum Operation {\n  Clone = 'Clone',\n  Pull = 'Pull',\n  Push = 'Push'\n}\n\n/**\n * The command IDs used by the git plugin.\n */\nexport namespace CommandIDs {\n  export const gitUI = 'git:ui';\n  export const gitTerminalCommand = 'git:terminal-command';\n  export const gitInit = 'git:init';\n  export const gitOpenUrl = 'git:open-url';\n  export const gitToggleSimpleStaging = 'git:toggle-simple-staging';\n  export const gitToggleDoubleClickDiff = 'git:toggle-double-click-diff';\n  export const gitAddRemote = 'git:add-remote';\n  export const gitClone = 'git:clone';\n  export const gitOpenGitignore = 'git:open-gitignore';\n  export const gitPush = 'git:push';\n  export const gitPull = 'git:pull';\n  // Context menu commands\n  export const gitFileDiff = 'git:context-diff';\n  export const gitFileDiscard = 'git:context-discard';\n  export const gitFileOpen = 'git:context-open';\n  export const gitFileUnstage = 'git:context-unstage';\n  export const gitFileStage = 'git:context-stage';\n  export const gitFileTrack = 'git:context-track';\n  export const gitIgnore = 'git:context-ignore';\n  export const gitIgnoreExtension = 'git:context-ignoreExtension';\n}\n\n/**\n * Add the commands for the git extension.\n */\nexport function addCommands(\n  app: JupyterFrontEnd,\n  model: GitExtension,\n  fileBrowser: FileBrowser,\n  settings: ISettingRegistry.ISettings,\n  renderMime: IRenderMimeRegistry\n) {\n  const { commands, shell } = app;\n\n  /**\n   * Add open terminal in the Git repository\n   */\n  commands.addCommand(CommandIDs.gitTerminalCommand, {\n    label: 'Open Git Repository in Terminal',\n    caption: 'Open a New Terminal to the Git Repository',\n    execute: async args => {\n      const main = (await commands.execute(\n        'terminal:create-new',\n        args\n      )) as MainAreaWidget<ITerminal.ITerminal>;\n\n      try {\n        if (model.pathRepository !== null) {\n          const terminal = main.content;\n          terminal.session.send({\n            type: 'stdin',\n            content: [`cd \"${model.pathRepository.split('\"').join('\\\\\"')}\"\\n`]\n          });\n        }\n\n        return main;\n      } catch (e) {\n        console.error(e);\n        main.dispose();\n      }\n    },\n    isEnabled: () => model.pathRepository !== null\n  });\n\n  /** Add open/go to git interface command */\n  commands.addCommand(CommandIDs.gitUI, {\n    label: 'Git Interface',\n    caption: 'Go to Git user interface',\n    execute: () => {\n      try {\n        shell.activateById('jp-git-sessions');\n      } catch (err) {\n        console.error('Fail to open Git tab.');\n      }\n    }\n  });\n\n  /** Add git init command */\n  commands.addCommand(CommandIDs.gitInit, {\n    label: 'Initialize a Repository',\n    caption: 'Create an empty Git repository or reinitialize an existing one',\n    execute: async () => {\n      const currentPath = fileBrowser.model.path;\n      const result = await showDialog({\n        title: 'Initialize a Repository',\n        body: 'Do you really want to make this directory a Git Repo?',\n        buttons: [Dialog.cancelButton(), Dialog.warnButton({ label: 'Yes' })]\n      });\n\n      if (result.button.accept) {\n        logger.log({\n          message: 'Initializing...',\n          level: Level.RUNNING\n        });\n        try {\n          await model.init(currentPath);\n          model.pathRepository = currentPath;\n          logger.log({\n            message: 'Git repository initialized.',\n            level: Level.SUCCESS\n          });\n        } catch (error) {\n          console.error(\n            'Encountered an error when initializing the repository. Error: ',\n            error\n          );\n          logger.log({\n            message: 'Failed to initialize the Git repository',\n            level: Level.ERROR,\n            error\n          });\n        }\n      }\n    },\n    isEnabled: () => model.pathRepository === null\n  });\n\n  /** Open URL externally */\n  commands.addCommand(CommandIDs.gitOpenUrl, {\n    label: args => args['text'] as string,\n    execute: args => {\n      const url = args['url'] as string;\n      window.open(url);\n    }\n  });\n\n  /** add toggle for simple staging */\n  commands.addCommand(CommandIDs.gitToggleSimpleStaging, {\n    label: 'Simple staging',\n    isToggled: () => !!settings.composite['simpleStaging'],\n    execute: args => {\n      settings.set('simpleStaging', !settings.composite['simpleStaging']);\n    }\n  });\n\n  /** add toggle for double click opens diffs */\n  commands.addCommand(CommandIDs.gitToggleDoubleClickDiff, {\n    label: 'Double click opens diff',\n    isToggled: () => !!settings.composite['doubleClickDiff'],\n    execute: args => {\n      settings.set('doubleClickDiff', !settings.composite['doubleClickDiff']);\n    }\n  });\n\n  /** Command to add a remote Git repository */\n  commands.addCommand(CommandIDs.gitAddRemote, {\n    label: 'Add Remote Repository',\n    caption: 'Add a Git remote repository',\n    isEnabled: () => model.pathRepository !== null,\n    execute: async args => {\n      if (model.pathRepository === null) {\n        console.warn('Not in a Git repository. Unable to add a remote.');\n        return;\n      }\n      let url = args['url'] as string;\n      const name = args['name'] as string;\n\n      if (!url) {\n        const result = await InputDialog.getText({\n          title: 'Add a remote repository',\n          placeholder: 'Remote Git repository URL'\n        });\n\n        if (result.button.accept) {\n          url = result.value;\n        }\n      }\n\n      if (url) {\n        try {\n          await model.addRemote(url, name);\n        } catch (error) {\n          console.error(error);\n          showErrorMessage('Error when adding remote repository', error);\n        }\n      }\n    }\n  });\n\n  /** Add git clone command */\n  commands.addCommand(CommandIDs.gitClone, {\n    label: 'Clone a Repository',\n    caption: 'Clone a repository from a URL',\n    isEnabled: () => model.pathRepository === null,\n    execute: async () => {\n      const result = await showDialog({\n        title: 'Clone a repo',\n        body: new GitCloneForm(),\n        focusNodeSelector: 'input',\n        buttons: [Dialog.cancelButton(), Dialog.okButton({ label: 'CLONE' })]\n      });\n\n      if (result.button.accept && result.value) {\n        logger.log({\n          level: Level.RUNNING,\n          message: 'Cloning...'\n        });\n        try {\n          await Private.showGitOperationDialog<IGitCloneArgs>(\n            model,\n            Operation.Clone,\n            { path: fileBrowser.model.path, url: result.value }\n          );\n          logger.log({\n            message: 'Successfully cloned',\n            level: Level.SUCCESS\n          });\n          await fileBrowser.model.refresh();\n        } catch (error) {\n          console.error(\n            'Encountered an error when cloning the repository. Error: ',\n            error\n          );\n          logger.log({\n            message: 'Failed to clone',\n            level: Level.ERROR,\n            error\n          });\n        }\n      }\n    }\n  });\n\n  /** Add git open gitignore command */\n  commands.addCommand(CommandIDs.gitOpenGitignore, {\n    label: 'Open .gitignore',\n    caption: 'Open .gitignore',\n    isEnabled: () => model.pathRepository !== null,\n    execute: async () => {\n      await model.ensureGitignore();\n    }\n  });\n\n  /** Add git push command */\n  commands.addCommand(CommandIDs.gitPush, {\n    label: 'Push to Remote',\n    caption: 'Push code to remote repository',\n    isEnabled: () => model.pathRepository !== null,\n    execute: async () => {\n      logger.log({\n        level: Level.RUNNING,\n        message: 'Pushing...'\n      });\n      try {\n        await Private.showGitOperationDialog(model, Operation.Push);\n        logger.log({\n          message: 'Successfully pushed',\n          level: Level.SUCCESS\n        });\n      } catch (error) {\n        console.error(\n          'Encountered an error when pushing changes. Error: ',\n          error\n        );\n        logger.log({\n          message: 'Failed to push',\n          level: Level.ERROR,\n          error\n        });\n      }\n    }\n  });\n\n  /** Add git pull command */\n  commands.addCommand(CommandIDs.gitPull, {\n    label: 'Pull from Remote',\n    caption: 'Pull latest code from remote repository',\n    isEnabled: () => model.pathRepository !== null,\n    execute: async () => {\n      logger.log({\n        level: Level.RUNNING,\n        message: 'Pulling...'\n      });\n      try {\n        await Private.showGitOperationDialog(model, Operation.Pull);\n        logger.log({\n          message: 'Successfully pulled',\n          level: Level.SUCCESS\n        });\n      } catch (error) {\n        console.error(\n          'Encountered an error when pulling changes. Error: ',\n          error\n        );\n        logger.log({\n          message: 'Failed to pull',\n          level: Level.ERROR,\n          error\n        });\n      }\n    }\n  });\n\n  /* Context menu commands */\n  commands.addCommand(CommandIDs.gitFileOpen, {\n    label: 'Open',\n    caption: 'Open selected file',\n    execute: async args => {\n      const file: Git.IStatusFileResult = args as any;\n\n      const { x, y, to } = file;\n      if (x === 'D' || y === 'D') {\n        await showErrorMessage(\n          'Open File Failed',\n          'This file has been deleted!'\n        );\n        return;\n      }\n      try {\n        if (to[to.length - 1] !== '/') {\n          commands.execute('docmanager:open', {\n            path: model.getRelativeFilePath(to)\n          });\n        } else {\n          console.log('Cannot open a folder here');\n        }\n      } catch (err) {\n        console.error(`Fail to open ${to}.`);\n      }\n    }\n  });\n\n  commands.addCommand(CommandIDs.gitFileDiff, {\n    label: 'Diff',\n    caption: 'Diff selected file',\n    execute: args => {\n      const { context, filePath, isText, status } = (args as any) as {\n        context?: IDiffContext;\n        filePath: string;\n        isText: boolean;\n        status?: Git.Status;\n      };\n\n      let diffContext = context;\n      if (!diffContext) {\n        const specialRef = status === 'staged' ? 'INDEX' : 'WORKING';\n        diffContext = {\n          currentRef: { specialRef },\n          previousRef: { gitRef: 'HEAD' }\n        };\n      }\n\n      if (isDiffSupported(filePath) || isText) {\n        const id = `nbdiff-${filePath}-${getRefValue(diffContext.currentRef)}`;\n        const mainAreaItems = shell.widgets('main');\n        let mainAreaItem = mainAreaItems.next();\n        while (mainAreaItem) {\n          if (mainAreaItem.id === id) {\n            shell.activateById(id);\n            break;\n          }\n          mainAreaItem = mainAreaItems.next();\n        }\n\n        if (!mainAreaItem) {\n          const serverRepoPath = model.getRelativeFilePath();\n          const nbDiffWidget = ReactWidget.create(\n            <RenderMimeProvider value={renderMime}>\n              <Diff\n                path={filePath}\n                diffContext={diffContext}\n                topRepoPath={serverRepoPath}\n              />\n            </RenderMimeProvider>\n          );\n          nbDiffWidget.id = id;\n          nbDiffWidget.title.label = PathExt.basename(filePath);\n          nbDiffWidget.title.icon = diffIcon;\n          nbDiffWidget.title.closable = true;\n          nbDiffWidget.addClass('jp-git-diff-parent-diff-widget');\n\n          shell.add(nbDiffWidget, 'main');\n          shell.activateById(nbDiffWidget.id);\n        }\n      } else {\n        showErrorMessage(\n          'Diff Not Supported',\n          `Diff is not supported for ${PathExt.extname(\n            filePath\n          ).toLocaleLowerCase()} files.`\n        );\n      }\n    }\n  });\n\n  commands.addCommand(CommandIDs.gitFileStage, {\n    label: 'Stage',\n    caption: 'Stage the changes of selected file',\n    execute: async args => {\n      const selectedFile: Git.IStatusFile = args as any;\n      await model.add(selectedFile.to);\n    }\n  });\n\n  commands.addCommand(CommandIDs.gitFileTrack, {\n    label: 'Track',\n    caption: 'Start tracking selected file',\n    execute: async args => {\n      const selectedFile: Git.IStatusFile = args as any;\n      await model.add(selectedFile.to);\n    }\n  });\n\n  commands.addCommand(CommandIDs.gitFileUnstage, {\n    label: 'Unstage',\n    caption: 'Unstage the changes of selected file',\n    execute: async args => {\n      const selectedFile: Git.IStatusFile = args as any;\n      if (selectedFile.x !== 'D') {\n        await model.reset(selectedFile.to);\n      }\n    }\n  });\n\n  commands.addCommand(CommandIDs.gitFileDiscard, {\n    label: 'Discard',\n    caption: 'Discard recent changes of selected file',\n    execute: async args => {\n      const file: Git.IStatusFile = args as any;\n\n      const result = await showDialog({\n        title: 'Discard changes',\n        body: (\n          <span>\n            Are you sure you want to permanently discard changes to{' '}\n            <b>{file.to}</b>? This action cannot be undone.\n          </span>\n        ),\n        buttons: [\n          Dialog.cancelButton(),\n          Dialog.warnButton({ label: 'Discard' })\n        ]\n      });\n      if (result.button.accept) {\n        try {\n          if (file.status === 'staged' || file.status === 'partially-staged') {\n            await model.reset(file.to);\n          }\n          if (\n            file.status === 'unstaged' ||\n            (file.status === 'partially-staged' && file.x !== 'A')\n          ) {\n            // resetting an added file moves it to untracked category => checkout will fail\n            await model.checkout({ filename: file.to });\n          }\n        } catch (reason) {\n          showErrorMessage(`Discard changes for ${file.to} failed.`, reason, [\n            Dialog.warnButton({ label: 'DISMISS' })\n          ]);\n        }\n      }\n    }\n  });\n\n  commands.addCommand(CommandIDs.gitIgnore, {\n    label: () => 'Ignore this file (add to .gitignore)',\n    caption: () => 'Ignore this file (add to .gitignore)',\n    execute: async args => {\n      const selectedFile: Git.IStatusFile = args as any;\n      if (selectedFile) {\n        await model.ignore(selectedFile.to, false);\n      }\n    }\n  });\n\n  commands.addCommand(CommandIDs.gitIgnoreExtension, {\n    label: args => {\n      const selectedFile: Git.IStatusFile = args as any;\n      return `Ignore ${PathExt.extname(\n        selectedFile.to\n      )} extension (add to .gitignore)`;\n    },\n    caption: 'Ignore this file extension (add to .gitignore)',\n    execute: async args => {\n      const selectedFile: Git.IStatusFile = args as any;\n      if (selectedFile) {\n        const extension = PathExt.extname(selectedFile.to);\n        if (extension.length > 0) {\n          const result = await showDialog({\n            title: 'Ignore file extension',\n            body: `Are you sure you want to ignore all ${extension} files within this git repository?`,\n            buttons: [\n              Dialog.cancelButton(),\n              Dialog.okButton({ label: 'Ignore' })\n            ]\n          });\n          if (result.button.label === 'Ignore') {\n            await model.ignore(selectedFile.to, true);\n          }\n        }\n      }\n    },\n    isVisible: args => {\n      const selectedFile: Git.IStatusFile = args as any;\n      const extension = PathExt.extname(selectedFile.to);\n      return extension.length > 0;\n    }\n  });\n}\n\n/**\n * Adds commands and menu items.\n *\n * @private\n * @param app - Jupyter front end\n * @param gitExtension - Git extension instance\n * @param fileBrowser - file browser instance\n * @param settings - extension settings\n * @returns menu\n */\nexport function createGitMenu(commands: CommandRegistry): Menu {\n  const menu = new Menu({ commands });\n  menu.title.label = 'Git';\n  [\n    CommandIDs.gitInit,\n    CommandIDs.gitClone,\n    CommandIDs.gitPush,\n    CommandIDs.gitPull,\n    CommandIDs.gitAddRemote,\n    CommandIDs.gitTerminalCommand\n  ].forEach(command => {\n    menu.addItem({ command });\n  });\n\n  menu.addItem({ type: 'separator' });\n\n  menu.addItem({ command: CommandIDs.gitToggleSimpleStaging });\n\n  menu.addItem({ command: CommandIDs.gitToggleDoubleClickDiff });\n\n  menu.addItem({ type: 'separator' });\n\n  menu.addItem({ command: CommandIDs.gitOpenGitignore });\n\n  menu.addItem({ type: 'separator' });\n\n  const tutorial = new Menu({ commands });\n  tutorial.title.label = ' Help ';\n  RESOURCES.map(args => {\n    tutorial.addItem({\n      args,\n      command: CommandIDs.gitOpenUrl\n    });\n  });\n\n  menu.addItem({ type: 'submenu', submenu: tutorial });\n\n  return menu;\n}\n\n/* eslint-disable no-inner-declarations */\nnamespace Private {\n  /**\n   * Handle Git operation that may require authentication.\n   *\n   * @private\n   * @param model - Git extension model\n   * @param operation - Git operation name\n   * @param args - Git operation arguments\n   * @param authentication - Git authentication information\n   * @param retry - Is this operation retried?\n   * @returns Promise for displaying a dialog\n   */\n  export async function showGitOperationDialog<T>(\n    model: GitExtension,\n    operation: Operation,\n    args?: T,\n    authentication?: Git.IAuth,\n    retry = false\n  ): Promise<void> {\n    try {\n      // the Git action\n      switch (operation) {\n        case Operation.Clone:\n          // eslint-disable-next-line no-case-declarations\n          const { path, url } = (args as any) as IGitCloneArgs;\n          await model.clone(path, url, authentication);\n          break;\n        case Operation.Pull:\n          await model.pull(authentication);\n          break;\n        case Operation.Push:\n          await model.push(authentication);\n          break;\n        default:\n          return;\n      }\n    } catch (error) {\n      if (\n        AUTH_ERROR_MESSAGES.some(\n          errorMessage => error.message.indexOf(errorMessage) > -1\n        )\n      ) {\n        // If the error is an authentication error, ask the user credentials\n        const credentials = await showDialog({\n          title: 'Git credentials required',\n          body: new GitCredentialsForm(\n            'Enter credentials for remote repository',\n            retry ? 'Incorrect username or password.' : ''\n          )\n        });\n\n        if (credentials.button.accept) {\n          // Retry the operation if the user provides its credentials\n          return await showGitOperationDialog<T>(\n            model,\n            operation,\n            args,\n            credentials.value,\n            true\n          );\n        }\n      }\n      // Throw the error if it cannot be handled or\n      // if the user did not accept to provide its credentials\n      throw error;\n    }\n  }\n}\n/* eslint-enable no-inner-declarations */\n"]}