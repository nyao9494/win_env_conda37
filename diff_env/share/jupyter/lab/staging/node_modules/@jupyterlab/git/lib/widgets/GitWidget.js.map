{"version":3,"file":"GitWidget.js","sourceRoot":"./@jupyterlab/git/src/","sources":["widgets/GitWidget.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAK9D,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,QAAQ,EAAE,MAAM,wBAAwB,CAAC;AAClD,OAAO,EAAE,QAAQ,EAAE,MAAM,wBAAwB,CAAC;AAClD,OAAO,EAAE,aAAa,EAAE,MAAM,WAAW,CAAC;AAE1C,OAAO,EAAE,cAAc,EAAE,MAAM,yBAAyB,CAAC;AACzD,OAAO,EAAe,KAAK,EAAE,MAAM,WAAW,CAAC;AAE/C;;GAEG;AACH,MAAM,OAAO,SAAU,SAAQ,WAAW;IACxC,YACE,KAAmB,EACnB,QAAoC,EACpC,QAAyB,EACzB,WAA6B,EAC7B,OAAyB;QAEzB,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,iBAAiB,CAAC;QACjC,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;QAE9B,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;QAChC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;IAC5B,CAAC;IAED,MAAM;QACJ,OAAO,CACL,oBAAC,aAAa,CAAC,QAAQ,QACpB,MAAM,CAAC,EAAE,CAAC,CACT,oBAAC,KAAK,CAAC,QAAQ;YACb,oBAAC,QAAQ,IACP,QAAQ,EAAE,IAAI,CAAC,SAAS,EACxB,WAAW,EAAE,IAAI,CAAC,YAAY,EAC9B,MAAM,EAAE,MAAM,EACd,KAAK,EAAE,IAAI,CAAC,MAAM,EAClB,QAAQ,EAAE,IAAI,CAAC,SAAS,GACxB;YACF,oBAAC,SAAS,IACR,MAAM,EAAE,MAAM,CAAC,MAAM,EACrB,WAAW,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,KAAK,EAAE,KAAK,CAAC,IAAI,EAAiB,IAE7D,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;;gBACf,OAAA,OAAA,GAAG,0CAAE,OAAO,EAAC,CAAC,CAAC,CACb,oBAAC,QAAQ,IAAC,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,CAAC,SAAS,GAAI,CACjD,CAAC,CAAC,CAAC,IAAI,CAAA;aAAA,CAEA,CACG,CAClB,CACsB,CAC1B,CAAC;IACJ,CAAC;CAMF","sourcesContent":["import { ReactWidget, UseSignal } from '@jupyterlab/apputils';\nimport { FileBrowserModel } from '@jupyterlab/filebrowser';\nimport { ISettingRegistry } from '@jupyterlab/settingregistry';\nimport { CommandRegistry } from '@lumino/commands';\nimport { Widget } from '@lumino/widgets';\nimport * as React from 'react';\nimport { Feedback } from '../components/Feedback';\nimport { GitPanel } from '../components/GitPanel';\nimport { LoggerContext } from '../logger';\nimport { GitExtension } from '../model';\nimport { gitWidgetStyle } from '../style/GitWidgetStyle';\nimport { ILogMessage, Level } from '../tokens';\n\n/**\n * A class that exposes the git plugin Widget.\n */\nexport class GitWidget extends ReactWidget {\n  constructor(\n    model: GitExtension,\n    settings: ISettingRegistry.ISettings,\n    commands: CommandRegistry,\n    filebrowser: FileBrowserModel,\n    options?: Widget.IOptions\n  ) {\n    super(options);\n    this.node.id = 'GitSession-root';\n    this.addClass(gitWidgetStyle);\n\n    this._commands = commands;\n    this._filebrowser = filebrowser;\n    this._model = model;\n    this._settings = settings;\n  }\n\n  render() {\n    return (\n      <LoggerContext.Consumer>\n        {logger => (\n          <React.Fragment>\n            <GitPanel\n              commands={this._commands}\n              filebrowser={this._filebrowser}\n              logger={logger}\n              model={this._model}\n              settings={this._settings}\n            />\n            <UseSignal\n              signal={logger.signal}\n              initialArgs={{ message: '', level: Level.INFO } as ILogMessage}\n            >\n              {(sender, log) =>\n                log?.message ? (\n                  <Feedback log={log} settings={this._settings} />\n                ) : null\n              }\n            </UseSignal>\n          </React.Fragment>\n        )}\n      </LoggerContext.Consumer>\n    );\n  }\n\n  private _commands: CommandRegistry;\n  private _filebrowser: FileBrowserModel;\n  private _model: GitExtension;\n  private _settings: ISettingRegistry.ISettings;\n}\n"]}