{"version":3,"file":"FileItem.js","sourceRoot":"./@jupyterlab/git/src/","sources":["components/FileItem.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { classes } from 'typestyle';\nimport { GitExtension } from '../model';\nimport {\n  fileChangedLabelBrandStyle,\n  fileChangedLabelInfoStyle,\n  fileChangedLabelStyle,\n  fileStyle,\n  gitMarkBoxStyle,\n  selectedFileChangedLabelStyle,\n  selectedFileStyle\n} from '../style/FileItemStyle';\nimport { Git } from '../tokens';\nimport { FilePath } from './FilePath';\n\n// Git status codes https://git-scm.com/docs/git-status\nexport const STATUS_CODES = {\n  M: 'Modified',\n  A: 'Added',\n  D: 'Deleted',\n  R: 'Renamed',\n  C: 'Copied',\n  U: 'Updated',\n  '?': 'Untracked',\n  '!': 'Ignored'\n};\n\n/**\n * File marker properties\n */\ninterface IGitMarkBoxProps {\n  /**\n   * Filename\n   */\n  fname: string;\n  /**\n   * Git repository model\n   */\n  model: GitExtension;\n  /**\n   * File status\n   */\n  stage: Git.Status;\n}\n\n/**\n * Render the selection box in simple mode\n */\nclass GitMarkBox extends React.PureComponent<IGitMarkBoxProps> {\n  protected _onClick = (): void => {\n    // toggle will emit a markChanged signal\n    this.props.model.toggleMark(this.props.fname);\n\n    // needed if markChanged doesn't force an update of a parent\n    this.forceUpdate();\n  };\n\n  protected _onDoubleClick = (\n    event: React.MouseEvent<HTMLInputElement>\n  ): void => {\n    event.stopPropagation();\n  };\n\n  render(): JSX.Element {\n    // idempotent, will only run once per file\n    this.props.model.addMark(\n      this.props.fname,\n      this.props.stage !== 'untracked'\n    );\n\n    return (\n      <input\n        name=\"gitMark\"\n        className={gitMarkBoxStyle}\n        type=\"checkbox\"\n        checked={this.props.model.getMark(this.props.fname)}\n        onChange={this._onClick}\n        onDoubleClick={this._onDoubleClick}\n      />\n    );\n  }\n}\n\n/**\n * File item properties\n */\nexport interface IFileItemProps {\n  /**\n   * Action buttons on the file\n   */\n  actions?: React.ReactElement;\n  /**\n   * Callback to open a context menu on the file\n   */\n  contextMenu?: (file: Git.IStatusFile, event: React.MouseEvent) => void;\n  /**\n   * File model\n   */\n  file: Git.IStatusFile;\n  /**\n   * Is the file marked?\n   */\n  markBox?: boolean;\n  /**\n   * Git repository model\n   */\n  model: GitExtension;\n  /**\n   * Callback on double click\n   */\n  onDoubleClick: () => void;\n  /**\n   * Is the file selected?\n   */\n  selected?: boolean;\n  /**\n   * Callback to select the file\n   */\n  selectFile?: (file: Git.IStatusFile | null) => void;\n  /**\n   * Inline styling for the windowing\n   */\n  style: React.CSSProperties;\n}\n\nexport class FileItem extends React.PureComponent<IFileItemProps> {\n  protected _getFileChangedLabel(change: keyof typeof STATUS_CODES): string {\n    return STATUS_CODES[change];\n  }\n\n  protected _getFileChangedLabelClass(change: string): string {\n    if (change === 'M') {\n      return this.props.selected\n        ? classes(\n            fileChangedLabelStyle,\n            fileChangedLabelBrandStyle,\n            selectedFileChangedLabelStyle\n          )\n        : classes(fileChangedLabelStyle, fileChangedLabelBrandStyle);\n    } else {\n      return this.props.selected\n        ? classes(\n            fileChangedLabelStyle,\n            fileChangedLabelInfoStyle,\n            selectedFileChangedLabelStyle\n          )\n        : classes(fileChangedLabelStyle, fileChangedLabelInfoStyle);\n    }\n  }\n\n  protected _getFileClass(): string {\n    return this.props.selected\n      ? classes(fileStyle, selectedFileStyle)\n      : fileStyle;\n  }\n\n  render(): JSX.Element {\n    const { file } = this.props;\n    const status_code = file.status === 'staged' ? file.x : file.y;\n    const status = this._getFileChangedLabel(status_code as any);\n\n    return (\n      <div\n        className={this._getFileClass()}\n        onClick={\n          this.props.selectFile &&\n          (() => this.props.selectFile(this.props.file))\n        }\n        onContextMenu={\n          this.props.contextMenu &&\n          (event => {\n            this.props.contextMenu(this.props.file, event);\n          })\n        }\n        onDoubleClick={this.props.onDoubleClick}\n        style={this.props.style}\n        title={`${this.props.file.to} ● ${status}`}\n      >\n        {this.props.markBox && (\n          <GitMarkBox\n            fname={this.props.file.to}\n            stage={this.props.file.status}\n            model={this.props.model}\n          />\n        )}\n        <FilePath\n          filepath={this.props.file.to}\n          filetype={this.props.file.type}\n        />\n        {this.props.actions}\n        <span className={this._getFileChangedLabelClass(this.props.file.y)}>\n          {this.props.file.y === '?' ? 'U' : status_code}\n        </span>\n      </div>\n    );\n  }\n}\n"]}