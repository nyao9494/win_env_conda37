# This file created by conda-build 3.20.2
# meta.yaml template originally from:
# C:\ci\containers\0000160btd7\tmp\build\80754af9\combined_recipe, last modified Fri Sep 18 10:53:51 2020
# ------------------------------------------------

package:
    name: mkl_fft
    version: 1.2.0
source:
    sha256: ab34e4a3f3aaa983260b528ec8d7f2b98fcbfebd23c1462315e2efdb92395767
    url: https://github.com/IntelPython/mkl_fft/archive/v1.2.0.tar.gz
build:
    number: '0'
    script: C:\\ci\\mkl_fft_1600426432043\\_h_env\\python.exe setup.py build install
        --single-version-externally-managed --record=record.txt
    string: py37h45dec08_0
requirements:
    build:
        - vs2017_win-64 19.16.27032.1 hb4161e2_3
        - vswhere 2.7.1 h21ff451_0
    host:
        - blas 1.0 mkl
        - ca-certificates 2020.7.22 0
        - certifi 2020.6.20 py37_0
        - cython 0.29.21 py37ha925a31_0
        - icc_rt 2019.0.0 h0cc432a_1
        - intel-openmp 2019.4 245
        - mkl 2019.4 245
        - mkl-devel 2019.4 245
        - mkl-include 2019.4 245
        - mkl-service 2.3.0 py37hb782905_0
        - numpy-base 1.14.6 py37hc3f5095_5
        - numpy-devel 1.14.6 py37h4ba5984_5
        - openssl 1.1.1g he774522_1
        - python 3.7.9 h60c2a47_0
        - setuptools 49.6.0 py37_0
        - six 1.15.0 py_0
        - sqlite 3.33.0 h2a8f88b_0
        - vc 14.1 h0510ff6_4
        - vs2015_runtime 14.16.27012 hf0eaf9b_3
        - wincertstore 0.2 py37_0
        - zlib 1.2.11 h62dcd97_4
    run:
        - blas 1.0 mkl
        - mkl >=2019.4,<2020.0a0
        - mkl-service >=2,<3.0a0
        - numpy >=1.14.6,<2.0a0
        - python >=3.7,<3.8.0a0
        - vc >=14.1,<15.0a0
        - vs2015_runtime >=14.16.27012,<15.0a0
test:
    commands:
        - nosetests -v mkl_fft
    imports:
        - mkl_fft
        - mkl_fft._numpy_fft
        - mkl_fft._scipy_fft
    requires:
        - nose
about:
    description: NumPy-based implementation of Fast Fourier Transform using Intel
        (R) Math Kernel Library. Supports in-place and out-of-place, 1D and ND complex
        FFT on arrays of single and double precision with arbitrary memory layout,
        so long as array strides are multiples of its itemsize.
    home: http://github.com/IntelPython/mkl_fft
    license: BSD 3-Clause
    license_file: LICENSE.txt
    summary: NumPy-based implementation of Fast Fourier Transform using Intel (R)
        Math Kernel Library.
extra:
    copy_test_source_files: true
    final: true
    recipe-maintainers:
        - oleksandr-pavlyk
